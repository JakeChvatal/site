<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Jacob Chvatal</title>
    <link>https://confident-mclean-736f9a.netlify.com/projects/</link>
    <description>Recent content in Projects on Jacob Chvatal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Fri, 17 Jan 2020 20:59:00 -0500</lastBuildDate>
    
	<atom:link href="https://confident-mclean-736f9a.netlify.com/projects/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Poo-NU</title>
      <link>https://confident-mclean-736f9a.netlify.com/projects/poo-nu/</link>
      <pubDate>Fri, 17 Jan 2020 20:59:00 -0500</pubDate>
      
      <guid>https://confident-mclean-736f9a.netlify.com/projects/poo-nu/</guid>
      <description>Started at HackHarvard with a team of three other Northeastern students and myself, Poo-NU is an application to help Northeastern students locate the closest available restroom. The application can be found at https://github.com/jakechvatal/poo-nu.
The application is built with a React Native front-end with Material UI components and Bootstrap formatting. It interfaces with a GraphQL backend layer that makes queries to a MySQL databases. We selected these technologies primarily because we each wanted to learn how to use one of the technologies we chose; I had no experience with GraphQL and very little with React Native, so I learned how to apply my React knowledge to a cross-platform application and to adjust to a new form of querying and API definiton.</description>
    </item>
    
    <item>
      <title>School Projects</title>
      <link>https://confident-mclean-736f9a.netlify.com/projects/neu-projects/</link>
      <pubDate>Fri, 17 Jan 2020 00:00:00 -0500</pubDate>
      
      <guid>https://confident-mclean-736f9a.netlify.com/projects/neu-projects/</guid>
      <description>Here are some interesting school projects I&#39;ve worked on during school. Code for these projects can be provided upon request.
StackLang Interpreter (CS2500A) Wrote an interpreter for a small, stack-based programming language with lambdas, thunks and continuations in Racket&#39;s Intermediate Student Language DSL. Continued to TA this course and teach other students how to craft their own interpreters following similar principles.
MiniCraft (CS2500A): Wrote a top-down two-dimensional variation of Minecraft in Racket&#39;s ISL DSL wherein players can traverse a world, place and destroy different types of blocks with special effects such as exploding TNT.</description>
    </item>
    
    <item>
      <title>Building this Website</title>
      <link>https://confident-mclean-736f9a.netlify.com/projects/building-site/</link>
      <pubDate>Mon, 30 Dec 2019 11:12:00 -0500</pubDate>
      
      <guid>https://confident-mclean-736f9a.netlify.com/projects/building-site/</guid>
      <description>This website is written with org-mode, powered by Hugo, and hosted with Netlify.
Why?
I had several needs for making this website.
 Easily updatable. My last website was my first serious attempt at web development without using a framework - making use only of HTML, CSS and Javascript - and hosted on an archaic static site deployment platform. As impressive as the Three.js visualizations on the site were, I had to dive into the code, then drag-and-drop upload the individual files to a host.</description>
    </item>
    
    <item>
      <title>CDK Global Internship</title>
      <link>https://confident-mclean-736f9a.netlify.com/projects/cdk/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://confident-mclean-736f9a.netlify.com/projects/cdk/</guid>
      <description>At CDK Global, I leveraged React.js and Redux to, along with a high school intern and two college interns, develop software used by an internal credit reporting team to monitor the number of credit checks made by individual car dealerships.
Tech Stack We built a full-stack web application with a React.js front-end, making use of both Material UI and CDK Global&#39;s proprietary React components as well as Redux and thunk for asynchronous global state management.</description>
    </item>
    
    <item>
      <title>Dotfiles</title>
      <link>https://confident-mclean-736f9a.netlify.com/projects/dotfiles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://confident-mclean-736f9a.netlify.com/projects/dotfiles/</guid>
      <description>I&#39;ve spent a lot of time configuring my Arch Linux System. My initial installation is catalogued in Arch Linux Configuration; this is a description of the work I&#39;ve done to make the installation mine.
Color Scheme I&#39;ve based my entire color scheme on Doom Emacs&amp;rsquo; &amp;lsquo;Doom-one&amp;rsquo; theme, borrowing from the colors used for both the background and the syntax highlighting and reverse-engineered using both the original configuration file and the ```xcolor``` program as a last resort.</description>
    </item>
    
    <item>
      <title>Portland State University HSAP</title>
      <link>https://confident-mclean-736f9a.netlify.com/projects/psu-hsap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://confident-mclean-736f9a.netlify.com/projects/psu-hsap/</guid>
      <description>During a high-school summer, I was able to participate in an iteration of the Department of Defense&#39;s High School Apprenticeship program through Portland State University. Along with two other high school students, we explored a variety of mathematics and programming paradigms pertaining to generating prime numbers, working with superclusters, and partitioning sparse graphs through the development of OpenMP-parallelized C++ libraries.
All of our work was created under the PDX-Math-HSAP GitHub organization, which can be found at https://github.</description>
    </item>
    
  </channel>
</rss>